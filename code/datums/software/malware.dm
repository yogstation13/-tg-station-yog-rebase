
/datum/software/malware
	var/antivirus_resistance = 0

/datum/software/malware/copy()
	var/datum/software/malware/the_copy = ..()
	if(the_copy)
		the_copy.antivirus_resistance = src.antivirus_resistance
	return the_copy

/datum/software/malware/mutate()
	if(..())
		antivirus_resistance = Clamp(infect_chance + rand(-2, 2), 0, 98)
		return 1
	return 0

///////////////////////
//HONK
///////////////////////
/datum/software/malware/honkvirus
	name = "clown virus"
	flags = SOFTWARE_NOSPREAD
	can_infect = list(/obj/item/device/pda)
	var/honkChance = 60
	var/honks_remaining = 0
	var/last_honk = 0

/datum/software/malware/honkvirus/New()
	..()
	honks_remaining = rand(15,20)

/datum/software/malware/honkvirus/onTopicCall(href, href_list)
	if(prob(honkChance))
		honk()
	return 0

/datum/software/malware/honkvirus/onActivate(mob/user)
	if(prob(honkChance))
		honk()
	return 0

/datum/software/malware/honkvirus/on_join(datum/software/malware/honkvirus/other)
	if(istype(other, type))
		var/datum/software/malware/honkvirus/HV = other
		honks_remaining += HV.honks_remaining
		honkChance = max(other.honkChance, honkChance)
		return 1
	return 0

/datum/software/malware/honkvirus/proc/honk()
	if(world.time - last_honk < 1)
		return
	last_honk = world.time
	honks_remaining--
	playsound(get_turf(host), 'sound/items/bikehorn.ogg', 30, 1)
	if(honks_remaining < 1)
		uninfect()

///////////////////////
//*silence*
///////////////////////
/datum/software/malware/mimevirus
	name = "mime virus"
	flags = SOFTWARE_NOSPREAD
	can_infect = list(/obj/item/device/pda)

/datum/software/malware/mimevirus/infect()
	if(!..())
		return 0
	if(host)
		var/obj/item/device/pda/PDA = host
		PDA.silent = 1
		PDA.ttone = "silence"
		uninfect()
		return 1
	return 0

///////////////////////
//Detomatix
///////////////////////
/datum/software/malware/detomatix
	name = "detomatix"
	flags = SOFTWARE_NOSPREAD|SOFTWARE_NOMUTATE|SOFTWARE_ANTIVIRUS_IMMUNE
	can_infect = list(/obj/item/device/pda)

/datum/software/malware/detomatix/infect()
	if(!..())
		return 0
	if(host)
		var/obj/item/device/pda/PDA = host
		PDA.explode()
		uninfect()
		return 1
	return 0

///////////////////////
//Adware
///////////////////////
/datum/software/malware/adware
	name = "adware"
	infect_chance = 70
	var/popup_chance = 20
	var/popup_chance_min = 20
	var/popup_chance_max = 20
	var/ads_left = 10
	var/global/ad_id = 0

/datum/software/malware/adware/New()
	ads_left = rand(7, 15)
	..()

/datum/software/malware/adware/mutate()
	..()
	popup_chance = Clamp(popup_chance + rand(-2, 4), popup_chance_min, popup_chance_max)

/datum/software/malware/adware/onActivate(mob/user)
	if(prob(popup_chance))
		showAd(user)
		return 1
	return 0

/datum/software/malware/adware/onTopicCall(href, href_list)
	if(!istype(host, /obj/item/device/pda) && !istype(host, /obj/machinery/computer))
		return 0
	if(prob(popup_chance))
		showAd(usr)
		return 1
	return 0

/datum/software/malware/adware/proc/showAd(mob/user)
	if(!user || !user.client)
		return
	var/datum/asset/assets = get_asset_datum(/datum/asset/simple/adware)
	assets.send(user)
	popup_chance = max(popup_chance - 2, popup_chance_min) //have mercy
	var/datum/popup_ad/ad = get_random_popup_ad(src)
	user << browse(ad.content, "window=ad[ad_id++];size=[ad.size];border=1;can_resize=0;can_minimize=0")
	qdel(ad)
	ads_left--
	if(ads_left <= 0)
		uninfect()

/datum/software/malware/adware/Topic(href, href_list)
	if(href_list["ad_click"])
		ads_left++
		showAd(usr)

///////////////////////
//Stuxnet
///////////////////////
#define STUXNET_MESSAGE_ADMINS_COOLDOWN 120

/datum/software/malware/stuxnet
	name = "stuxnet"
	flags = SOFTWARE_SPREAD_POWERNET
	antivirus_resistance = 80
	infect_chance = 80
	can_infect = list(/obj/machinery/power, /obj/machinery/particle_accelerator/control_box)
	var/timerID = 0
	var/wait_time = 300
	var/global/last_admin_message = -STUXNET_MESSAGE_ADMINS_COOLDOWN

/datum/software/malware/stuxnet/infect()
	if(!..())
		return 0
	if(istype(host, /obj/machinery/power/emitter))
		disableEmitter()
	if(istype(host, /obj/machinery/particle_accelerator/control_box))
		overpowerPA()
	return 1

/datum/software/malware/stuxnet/uninfect()
	deltimer(timerID)
	timerID = 0
	..()

/datum/software/malware/stuxnet/proc/disableEmitter()
	if(istype(host, /obj/machinery/power/emitter))
		var/obj/machinery/power/emitter/E = host
		E.active = 0
		if(world.time - last_admin_message > STUXNET_MESSAGE_ADMINS_COOLDOWN)
			last_admin_message = world.time
			message_admins("Emitter turned off by <b>[src] virus</b> in ([E.x],[E.y],[E.z]) <a href='?_src_=holder;del_all_stuxnet=1'>\[DELETE STUXNET VIRUS\]</a>",0,1)
		log_game("Emitter turned off by <b>[src] virus</b> in ([E.x],[E.y],[E.z])")
		E.investigate_log("turned <font color='red'>off</font> by <b>[src] virus</b>","singulo")
		E.locked = 1
		E.update_icon()
		timerID = addtimer(src, "disableEmitter", wait_time)

/datum/software/malware/stuxnet/proc/overpowerPA()
	if(istype(host, /obj/machinery/particle_accelerator/control_box))
		var/obj/machinery/particle_accelerator/control_box/PA = host
		if(PA.assembled && !PA.stat)
			if(!PA.active)
				if(!PA.wires.is_cut(WIRE_POWER))
					PA.investigate_log("PA Control Computer turned ["<font color='red'>ON</font>"] by <b>[src] virus</b>","singulo")
					if(world.time - last_admin_message > STUXNET_MESSAGE_ADMINS_COOLDOWN)
						last_admin_message = world.time
						message_admins("PA Control Computer turned ["<font color='red'>ON</font>"] by <b>[src] virus</b> <a href='?_src_=holder;del_all_stuxnet=1'>\[DELETE STUXNET VIRUS\]</a>",0,1)
					log_game("PA Control Computer turned ["<font color='red'>ON</font>"] by <b>[src] virus</b> in ([PA.x],[PA.y],[PA.z])")
					PA.toggle_power(FALSE)
				return

			if(PA.strength < PA.strength_upper_limit)
				if(!PA.wires.is_cut(WIRE_STRENGTH))
					PA.add_strength(FALSE)
					if(world.time - last_admin_message > STUXNET_MESSAGE_ADMINS_COOLDOWN)
						last_admin_message = world.time
						message_admins("PA Control Computer increased to [PA.strength] by <b>[src] virus</b> <a href='?_src_=holder;del_all_stuxnet=1>\[DELETE STUXNET VIRUS\]</a>",0,1)
					log_game("PA Control Computer increased to [PA.strength] by <b>[src] virus</b>")
					PA.investigate_log("PA Control Computer increased to [PA.strength] by <b>[src] virus</b>" ,"singulo")
		timerID = addtimer(src, "overpowerPA", wait_time)

#undef STUXNET_MESSAGE_ADMINS_COOLDOWN
